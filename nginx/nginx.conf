events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Configuration du serveur
    server {
        listen 80;
        server_name votre-domaine.com www.votre-domaine.com;
        
        # Redirection HTTP vers HTTPS (décommentez quand SSL sera configuré)
        # return 301 https://$server_name$request_uri;

        # Servir les fichiers statiques du frontend
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # Proxy pour l'API backend
        location /api {
            proxy_pass http://backend:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy pour les websockets (chat)
        location /socket.io {
            proxy_pass http://backend:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Erreurs
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    # Configuration HTTPS (à décommenter après avoir obtenu les certificats SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name votre-domaine.com www.votre-domaine.com;
    # 
    #     ssl_certificate /etc/ssl/certs/votre-domaine.com.crt;
    #     ssl_certificate_key /etc/ssl/private/votre-domaine.com.key;
    # 
    #     # Reste de la configuration identique au server block sur le port 80
    #     location / {
    #         root   /usr/share/nginx/html;
    #         index  index.html index.htm;
    #         try_files $uri $uri/ /index.html;
    #     }
    # 
    #     location /api {
    #         proxy_pass http://backend:5000;
    #         # ... même configuration que ci-dessus
    #     }
    # }
}